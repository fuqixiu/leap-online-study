library(robustlmm) # robust fit
library(dplyr)
library(MuMIn)
library(lme4)
library(lmerTest)
library(multcomp)
library(Matrix)
library(tidyr)
library(MuMIn)
library(readxl)
library(ggpubr)
library(interactions)
library(DHARMa) # for simulateResiduals
library(robustlmm) # robust fit
# Reaction time (FINAL MODEL)
ug.rt.m2 <- lmer(data = ug_data,
formula = log_rt ~  depression + anhedonia + depression*anhedonia + offer
+ ladder_us + md_anx_prior_diag + female + age
+ (1 | participant),
control = lmerControl(optCtrl = list(maxfun = 1e6)))
summary(ug.rt.m2)
#anova(ug.rt.m2)
r.squaredGLMM(ug.rt.m2)
BIC(ug.rt.m2)
# Reaction time (FINAL MODEL)
ug.rt.m2 <- lmer(data = ug_data,
formula = log_rt ~  depression + anhedonia + depression*anhedonia + offer
+ ladder_us + md_anx_prior_diag + female + age
+ (1 | participant),
control = lmerControl(optCtrl = list(maxfun = 1e6)))
summary(ug.rt.m2)
#anova(ug.rt.m2)
r.squaredGLMM(ug.rt.m2)
BIC(ug.rt.m2)
model_performance(ug.rt.m2)
install.packages("performance")
library(dplyr)
library(MuMIn)
library(lme4)
library(lmerTest)
library(multcomp)
#library(Matrix)
library(tidyr)
library(MuMIn)
library(readxl)
library(ggpubr)
library(interactions)
library(performance) #checking model performance
library(DHARMa) # for simulateResiduals
library(robustlmm) # robust fit
# Reaction time
ug.rt.m <- lmer(data = ug_data,
formula = log_rt ~  depression + anhedonia + depression*anhedonia
+ ladder_us + md_anx_prior_diag
+ (1 | participant),
control = lmerControl(optCtrl = list(maxfun = 1e6)))
summary(ug.rt.m)
#anova(ug.rt.m)
#r.squaredGLMM(ug.rt.m)
#BIC(ug.rt.m)
# Reaction time (FINAL MODEL)
ug.rt.m2 <- lmer(data = ug_data,
formula = log_rt ~  depression + anhedonia + depression*anhedonia + offer
+ ladder_us + md_anx_prior_diag + female + age
+ (1 | participant),
control = lmerControl(optCtrl = list(maxfun = 1e6)))
summary(ug.rt.m2)
#anova(ug.rt.m2)
r.squaredGLMM(ug.rt.m2)
BIC(ug.rt.m2)
model_performance(ug.rt.m2)
write_lme_results_to_excel <- function(lme_model, filename) {
# Load required libraries
library(openxlsx)
# Get summary of the model
summary_table <- summary(lme_model)
# Get ANOVA table of the model
anova_table <- anova(lme_model)
# Convert summary to data frame with variable names as row names
summary_df <- data.frame(variable = rownames(summary_table$coefficients), summary_table$coefficients,row.names = NULL)
# Convert ANOVA to data frame with variable names as row names
anova_df <- data.frame(variable = rownames(anova_table), anova_table,row.names = NULL)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a new worksheet for summary results
addWorksheet(wb, "Summary")
writeData(wb, "Summary", summary_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for ANOVA results
addWorksheet(wb, "ANOVA")
writeData(wb, "ANOVA", anova_df, startCol = 1, startRow = 1, colNames = TRUE)
# Save the workbook to a file
saveWorkbook(wb, filename, overwrite = TRUE)
}
# Write summary and anova to Excel
write_lme_results_to_excel(ug.rt.m2, "./lme_results/ug_rt.xlsx")
write_lme_results_to_excel <- function(lme_model, filename) {
# Load required libraries
library(openxlsx)
# Get summary of the model
summary_table <- summary(lme_model)
# Get ANOVA table of the model
anova_table <- anova(lme_model)
# Get performance table of the model
perf_table <- performance(lme_model)
# Convert summary to data frame with variable names as row names
summary_df <- data.frame(variable = rownames(summary_table$coefficients), summary_table$coefficients,row.names = NULL)
# Convert ANOVA to data frame with variable names as row names
anova_df <- data.frame(variable = rownames(anova_table), anova_table,row.names = NULL)
# Convert ANOVA to data frame with variable names as row names
perf_df <- data.frame(variable = rownames(perf_table), perf_table,row.names = NULL)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a new worksheet for summary results
addWorksheet(wb, "Summary")
writeData(wb, "Summary", summary_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for ANOVA results
addWorksheet(wb, "ANOVA")
writeData(wb, "ANOVA", anova_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for Performance results
addWorksheet(wb, "Performance")
writeData(wb, "Performance", perf_df, startCol = 1, startRow = 1, colNames = TRUE)
# Save the workbook to a file
saveWorkbook(wb, filename, overwrite = TRUE)
}
# Write summary and anova to Excel
write_lme_results_to_excel(ug.rt.m2, "./lme_results/ug_rt.xlsx")
write_lme_results_to_excel <- function(lme_model, filename) {
# Load required libraries
library(openxlsx)
# Get summary of the model
summary_table <- summary(lme_model)
# Get ANOVA table of the model
anova_table <- anova(lme_model)
# Get performance table of the model
perf_table <- performance(lme_model)
# Convert summary to data frame with variable names as row names
summary_df <- data.frame(variable = rownames(summary_table$coefficients), summary_table$coefficients,row.names = NULL)
# Convert ANOVA to data frame with variable names as row names
anova_df <- data.frame(variable = rownames(anova_table), anova_table,row.names = NULL)
# Convert ANOVA to data frame with variable names as row names
perf_df <- data.frame(variable = rownames(perf_table), perf_table,row.names = NULL)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a new worksheet for summary results
addWorksheet(wb, "Summary")
writeData(wb, "Summary", summary_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for ANOVA results
addWorksheet(wb, "ANOVA")
writeData(wb, "ANOVA", anova_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for Performance results
addWorksheet(wb, "Performance")
writeData(wb, "Performance", perf_df, startCol = 1, startRow = 1, colNames = TRUE)
# Save the workbook to a file
saveWorkbook(wb, filename, overwrite = TRUE)
}
# Write summary and anova to Excel
write_lme_results_to_excel(ug.rt.m2, "./lme_results/ug_rt.xlsx")
write_lme_results_to_excel <- function(lme_model, filename) {
library(openxlsx)
# Get summary of the model
summary_table <- summary(lme_model)
# Extract fixed effects
fixed_effects_df <- data.frame(variable = rownames(summary_table$coefficients), summary_table$coefficients, row.names = NULL)
# Extract random effects
random_effects_list <- summary_table$random
random_effects_df <- do.call(rbind, lapply(random_effects_list, function(x) {
data.frame(variable = rownames(x), x, row.names = NULL)
}))
# Get ANOVA table of the model
anova_table <- anova(lme_model)
anova_df <- data.frame(variable = rownames(anova_table), anova_table, row.names = NULL)
# Get performance table of the model
perf_table <- performance::performance(lme_model)
perf_df <- data.frame(metric = names(perf_table), value = unlist(perf_table), row.names = NULL)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a new worksheet for fixed effects
addWorksheet(wb, "Fixed Effects")
writeData(wb, "Fixed Effects", fixed_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for random effects
addWorksheet(wb, "Random Effects")
writeData(wb, "Random Effects", random_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for ANOVA results
addWorksheet(wb, "ANOVA")
writeData(wb, "ANOVA", anova_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for performance results
addWorksheet(wb, "Performance")
writeData(wb, "Performance", perf_df, startCol = 1, startRow = 1, colNames = TRUE)
# Save the workbook to a file
saveWorkbook(wb, filename, overwrite = TRUE)
}
# Write summary and anova to Excel
write_lme_results_to_excel(ug.rt.m2, "./lme_results/ug_rt.xlsx")
write_lme_results_to_excel <- function(lme_model, filename) {
library(openxlsx)
# Get summary of the model
summary_table <- summary(lme_model)
# Extract fixed effects
fixed_effects_df <- data.frame(variable = rownames(summary_table$coefficients), summary_table$coefficients, row.names = NULL)
# Extract random effects
random_effects <- summary_table$varcor
random_effects_df <- data.frame()
for (i in seq_along(random_effects)) {
re_df <- as.data.frame(random_effects[[i]])
re_df$Group <- names(random_effects)[i]
re_df$Term <- rownames(re_df)
random_effects_df <- rbind(random_effects_df, re_df)
}
# Get ANOVA table of the model
anova_table <- anova(lme_model)
anova_df <- data.frame(variable = rownames(anova_table), anova_table, row.names = NULL)
# Get performance table of the model
perf_table <- performance::performance(lme_model)
perf_df <- data.frame(metric = names(perf_table), value = unlist(perf_table), row.names = NULL)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a new worksheet for fixed effects
addWorksheet(wb, "Fixed Effects")
writeData(wb, "Fixed Effects", fixed_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for random effects
addWorksheet(wb, "Random Effects")
writeData(wb, "Random Effects", random_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for ANOVA results
addWorksheet(wb, "ANOVA")
writeData(wb, "ANOVA", anova_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for performance results
addWorksheet(wb, "Performance")
writeData(wb, "Performance", perf_df, startCol = 1, startRow = 1, colNames = TRUE)
# Save the workbook to a file
saveWorkbook(wb, filename, overwrite = TRUE)
}
# Write summary and anova to Excel
write_lme_results_to_excel(ug.rt.m2, "./lme_results/ug_rt.xlsx")
write_lme_results_to_excel <- function(lme_model, filename) {
library(openxlsx)
# Get summary of the model
summary_table <- summary(lme_model)
# Extract fixed effects
fixed_effects_df <- data.frame(variable = rownames(summary_table$coefficients), summary_table$coefficients, row.names = NULL)
# Extract random effects
random_effects <- summary_table$varcor
random_effects_df <- data.frame()
# Get ANOVA table of the model
anova_table <- anova(lme_model)
anova_df <- data.frame(variable = rownames(anova_table), anova_table, row.names = NULL)
# Get performance table of the model
perf_table <- performance::performance(lme_model)
perf_df <- data.frame(metric = names(perf_table), value = unlist(perf_table), row.names = NULL)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a new worksheet for fixed effects
addWorksheet(wb, "Fixed Effects")
writeData(wb, "Fixed Effects", fixed_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for random effects
addWorksheet(wb, "Random Effects")
writeData(wb, "Random Effects", random_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for ANOVA results
addWorksheet(wb, "ANOVA")
writeData(wb, "ANOVA", anova_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for performance results
addWorksheet(wb, "Performance")
writeData(wb, "Performance", perf_df, startCol = 1, startRow = 1, colNames = TRUE)
# Save the workbook to a file
saveWorkbook(wb, filename, overwrite = TRUE)
}
# Write summary and anova to Excel
write_lme_results_to_excel(ug.rt.m2, "./lme_results/ug_rt.xlsx")
write_lme_results_to_excel <- function(lme_model, filename) {
library(openxlsx)
# Get summary of the model
summary_table <- summary(lme_model)
# Extract fixed effects
fixed_effects_df <- data.frame(variable = rownames(summary_table$coefficients), summary_table$coefficients, row.names = NULL)
# Extract random effects
random_effects <- summary_table$varcor
#random_effects_df <- data.frame()
# Get ANOVA table of the model
anova_table <- anova(lme_model)
anova_df <- data.frame(variable = rownames(anova_table), anova_table, row.names = NULL)
# Get performance table of the model
perf_table <- performance::performance(lme_model)
perf_df <- data.frame(metric = names(perf_table), value = unlist(perf_table), row.names = NULL)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a new worksheet for fixed effects
addWorksheet(wb, "Fixed Effects")
writeData(wb, "Fixed Effects", fixed_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for random effects
addWorksheet(wb, "Random Effects")
writeData(wb, "Random Effects", random_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for ANOVA results
addWorksheet(wb, "ANOVA")
writeData(wb, "ANOVA", anova_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for performance results
addWorksheet(wb, "Performance")
writeData(wb, "Performance", perf_df, startCol = 1, startRow = 1, colNames = TRUE)
# Save the workbook to a file
saveWorkbook(wb, filename, overwrite = TRUE)
}
# Write summary and anova to Excel
write_lme_results_to_excel(ug.rt.m2, "./lme_results/ug_rt.xlsx")
summary(ug.rt.m2)$varcor
write_lme_results_to_excel <- function(lme_model, filename) {
library(openxlsx)
# Get summary of the model
summary_table <- summary(lme_model)
# Extract fixed effects
fixed_effects_df <- data.frame(variable = rownames(summary_table$coefficients), summary_table$coefficients, row.names = NULL)
# Extract random effects
#random_effects <- summary_table$varcor
random_effects_df <- data.frame(variable = rownames(summary_table$varcor), summary_table$varcor, row.names = NULL)
#random_effects_df <- data.frame()
# Get ANOVA table of the model
anova_table <- anova(lme_model)
anova_df <- data.frame(variable = rownames(anova_table), anova_table, row.names = NULL)
# Get performance table of the model
perf_table <- performance::performance(lme_model)
perf_df <- data.frame(metric = names(perf_table), value = unlist(perf_table), row.names = NULL)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a new worksheet for fixed effects
addWorksheet(wb, "Fixed Effects")
writeData(wb, "Fixed Effects", fixed_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for random effects
addWorksheet(wb, "Random Effects")
writeData(wb, "Random Effects", random_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for ANOVA results
addWorksheet(wb, "ANOVA")
writeData(wb, "ANOVA", anova_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for performance results
addWorksheet(wb, "Performance")
writeData(wb, "Performance", perf_df, startCol = 1, startRow = 1, colNames = TRUE)
# Save the workbook to a file
saveWorkbook(wb, filename, overwrite = TRUE)
}
# Write summary and anova to Excel
write_lme_results_to_excel(ug.rt.m2, "./lme_results/ug_rt.xlsx")
write_lme_results_to_excel <- function(lme_model, filename) {
library(openxlsx)
# Get summary of the model
summary_table <- summary(lme_model)
# Extract fixed effects
fixed_effects_df <- data.frame(variable = rownames(summary_table$coefficients), summary_table$coefficients, row.names = NULL)
# Extract random effects
random_effects <- summary_table$varcor
random_effects_df <- data.frame()
# Convert random effects to a data frame
for (name in names(random_effects)) {
re <- random_effects[[name]]
re_df <- as.data.frame(re)
re_df$Group <- name
re_df$Term <- rownames(re_df)
random_effects_df <- rbind(random_effects_df, re_df)
}
# Clean up the random effects data frame
random_effects_df <- random_effects_df[, c("Group", "Term", "vcov", "sdcor")]
colnames(random_effects_df) <- c("Group", "Term", "Variance", "Standard Deviation")
#random_effects <- summary_table$varcor
#random_effects_df <- data.frame(variable = rownames(summary_table$varcor), summary_table$varcor, row.names = NULL)
#random_effects_df <- data.frame()
# Get ANOVA table of the model
anova_table <- anova(lme_model)
anova_df <- data.frame(variable = rownames(anova_table), anova_table, row.names = NULL)
# Get performance table of the model
perf_table <- performance::performance(lme_model)
perf_df <- data.frame(metric = names(perf_table), value = unlist(perf_table), row.names = NULL)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a new worksheet for fixed effects
addWorksheet(wb, "Fixed Effects")
writeData(wb, "Fixed Effects", fixed_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for random effects
addWorksheet(wb, "Random Effects")
writeData(wb, "Random Effects", random_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for ANOVA results
addWorksheet(wb, "ANOVA")
writeData(wb, "ANOVA", anova_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for performance results
addWorksheet(wb, "Performance")
writeData(wb, "Performance", perf_df, startCol = 1, startRow = 1, colNames = TRUE)
# Save the workbook to a file
saveWorkbook(wb, filename, overwrite = TRUE)
}
# Write summary and anova to Excel
write_lme_results_to_excel(ug.rt.m2, "./lme_results/ug_rt.xlsx")
write_lme_results_to_excel <- function(lme_model, filename) {
library(openxlsx)
# Get summary of the model
summary_table <- summary(lme_model)
# Extract fixed effects
fixed_effects_df <- data.frame(variable = rownames(summary_table$coefficients), summary_table$coefficients, row.names = NULL)
# Extract random effect
random_effects <- summary_table$varcor
# Get ANOVA table of the model
anova_table <- anova(lme_model)
anova_df <- data.frame(variable = rownames(anova_table), anova_table, row.names = NULL)
# Get performance table of the model
perf_table <- performance::performance(lme_model)
perf_df <- data.frame(metric = names(perf_table), value = unlist(perf_table), row.names = NULL)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a new worksheet for fixed effects
addWorksheet(wb, "Fixed Effects")
writeData(wb, "Fixed Effects", fixed_effects_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for random effects
addWorksheet(wb, "Random Effects")
writeData(wb, "Random Effects", random_effects, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for ANOVA results
addWorksheet(wb, "ANOVA")
writeData(wb, "ANOVA", anova_df, startCol = 1, startRow = 1, colNames = TRUE)
# Add a new worksheet for performance results
addWorksheet(wb, "Performance")
writeData(wb, "Performance", perf_df, startCol = 1, startRow = 1, colNames = TRUE)
# Save the workbook to a file
saveWorkbook(wb, filename, overwrite = TRUE)
}
# Write summary and anova to Excel
write_lme_results_to_excel(ug.rt.m2, "./lme_results/ug_rt.xlsx")
View(rl_data)
# RT LME per block
neg_df = subset(rl_data, block_type_recode == 'Negative')
# RT LME per block
neg_df = subset(rl_data, block_type_recode == 'Negative')
mix_df = subset(rl_data, block_type_recode == 'Mixed')
pos_df = subset(rl_data, block_type_recode == 'Positive')
rl.rt.m3.neg <- lmer(data = neg_df,
formula = log_rt ~  depression + anhedonia + depression*anhedonia
+ ladder_us + md_anx_prior_diag + female + age
+ (1 | participant),
control = lmerControl(optCtrl = list(maxfun = 1e6)))
summary(rl.rt.m3.neg)
rl.rt.m3.neg <- lmer(data = mix_df,
formula = log_rt ~  depression + anhedonia + depression*anhedonia
+ ladder_us + md_anx_prior_diag + female + age
+ (1 | participant),
control = lmerControl(optCtrl = list(maxfun = 1e6)))
summary(rl.rt.m3.neg)
rl.rt.m3.neg <- lmer(data = pos_df,
formula = log_rt ~  depression + anhedonia + depression*anhedonia
+ ladder_us + md_anx_prior_diag + female + age
+ (1 | participant),
control = lmerControl(optCtrl = list(maxfun = 1e6)))
summary(rl.rt.m3.neg)
rl.rt.m3.block <- lmer(data = pos_df,
formula = log_rt ~  depression + anhedonia + depression*anhedonia
+ ladder_us + md_anx_prior_diag + female + age
+ (1 | participant),
control = lmerControl(optCtrl = list(maxfun = 1e6)))
summary(rl.rt.m3.block)
# Optimal choice by block
rl.opt.m3_block <- glmer(data = neg_df,
formula = optimal ~  depression + anhedonia + depression*anhedonia
+ ladder_us + md_anx_prior_diag + female + age
+ (1 | participant),
family = binomial(link="logit"),
control = glmerControl(optimizer='bobyqa',
optCtrl=list(maxfun=20000)))
summary(rl.opt.m3_block)
# Optimal choice by block
rl.opt.m3_block <- glmer(data = mix_df,
formula = optimal ~  depression + anhedonia + depression*anhedonia
+ ladder_us + md_anx_prior_diag + female + age
+ (1 | participant),
family = binomial(link="logit"),
control = glmerControl(optimizer='bobyqa',
optCtrl=list(maxfun=20000)))
summary(rl.opt.m3_block)
# Optimal choice by block
rl.opt.m3_block <- glmer(data = pos_df,
formula = optimal ~  depression + anhedonia + depression*anhedonia
+ ladder_us + md_anx_prior_diag + female + age
+ (1 | participant),
family = binomial(link="logit"),
control = glmerControl(optimizer='bobyqa',
optCtrl=list(maxfun=20000)))
View(mix_df)
summary(rl.opt.m3_block)
rm(list = ls())
cpath = setwd('C:/Users/fuq01/Documents/GitHub/leap-analysis/prolific_3T_2023/master_data')
ug_data = read.csv("LEAP_baseline_ug_n245")
rm(list = ls())
cpath = setwd('C:/Users/fuq01/Documents/GitHub/leap-analysis/prolific_3T_2023/master_data')
ug_data = read.csv("LEAP_baseline_ug_n245.csv")
rl_data = read.csv("LEAP_baseline_slot_n235.csv")
library(dplyr)
library(MuMIn)
library(lme4)
library(lmerTest)
library(multcomp)
#library(Matrix)
library(tidyr)
library(MuMIn)
library(readxl)
library(ggpubr)
library(interactions)
library(performance) #checking model performance
library(DHARMa) # for simulateResiduals
library(robustlmm) # robust fit
library(dplyr)
library(MuMIn)
library(lme4)
library(lmerTest)
library(multcomp)
#library(Matrix)
library(tidyr)
library(MuMIn)
library(readxl)
library(ggpubr)
library(interactions)
library(performance) #checking model performance
library(DHARMa) # for simulateResiduals
#library(robustlmm) # robust fit
