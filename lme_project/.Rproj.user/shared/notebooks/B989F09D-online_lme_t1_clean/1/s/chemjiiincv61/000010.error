{"frames":[{"func":"model_performance(ug.rr)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"model_performance.merMod(ug.rr)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"suppressWarnings(icc(model))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, warning = function(w) if (inherits(w, \n    classes)) tryInvokeRestart(\"muffleWarning\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"icc(model)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".compute_random_vars(model, tolerance = tolerance, null_model = null_model, \n    approximation = approximation, model_component = model_component, \n    verbose = verbose)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(insight::get_variance(model, name_fun = name_fun, name_full = name_full, \n    tolerance = tolerance, null_model = null_model, approximation = approximation, \n    model_component = model_component, verbose = verbose), error = function(e) {\n    if (inherits(e, c(\"simpleError\", \"error\")) && verbose) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"insight::get_variance(model, name_fun = name_fun, name_full = name_full, \n    tolerance = tolerance, null_model = null_model, approximation = approximation, \n    model_component = model_component, verbose = verbose)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"get_variance.merMod(model, name_fun = name_fun, name_full = name_full, \n    tolerance = tolerance, null_model = null_model, approximation = approximation, \n    model_component = model_component, verbose = verbose)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".safe(.compute_variances(model = x, component = component, name_fun = \"get_variance\", \n    name_full = \"random effect variances\", verbose = verbose, \n    tolerance = tolerance, model_null = null_model, approximation = approximation))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(code, error = function(e) on_error)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".compute_variances(model = x, component = component, name_fun = \"get_variance\", \n    name_full = \"random effect variances\", verbose = verbose, \n    tolerance = tolerance, model_null = null_model, approximation = approximation)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".safe(null_model(model, verbose = FALSE))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(code, error = function(e) on_error)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"null_model(model, verbose = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".null_model_mixed(model, offset_term, model_formula, verbose)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(if (is.null(offset_term)) {\n    suppressWarnings(stats::update(model, nullform))\n} else {\n    suppressWarnings(do.call(stats::update, list(model, formula = nullform,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"suppressWarnings(stats::update(model, nullform))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, warning = function(w) if (inherits(w, \n    classes)) tryInvokeRestart(\"muffleWarning\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stats::update(model, nullform)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"update.merMod(model, nullform)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(eval(call, envir = ff), error = function(e) {\n    tryCatch(eval(call, envir = sf), error = function(e) {\n        eval(call, envir = pf)\n    }) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(call, envir = ff)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(call, envir = ff)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"glmer(formula = choice_acc ~ (1 + offer | participant), data = ug_data, \n    family = binomial(link = \"logit\"), control = glmerControl(optimizer = \"bobyqa\", \n        optCtrl = list(maxfun = 1e+06)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"optimizeGlmer(devfun, optimizer = control$optimizer[[1]], restart_edge = if (nAGQ == \n    0) control$restart_edge else FALSE, boundary.tol = if (nAGQ == \n    0) control$boundary.tol else 0, control = control$optCtrl, \n    start = start, nAGQ = 0, verbose = verbose, calc.derivs = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"optwrap(optimizer, devfun, start, rho$lower, control = control, \n    adj = adj, verbose = verbose, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(do.call(optfun, arglist), warning = function(w) {\n    curWarnings <<- append(curWarnings, list(w$message))\n})","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(optfun, arglist)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (par, fn, lower = -Inf, upper = Inf, control = list(), \n    ...) \n{\n    nn <- names(par) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (x) \n{\n    names(x) <- nn\n    fn(x, ...) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fn(x, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"pwrssUpdate(pp, resp, tol = tolPwrss, GQmat = GHrule(0L), compDev = compDev, \n    maxit = maxit, verbose = verbose)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"nrow(GQmat)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"GHrule(0L)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stopifnot(length(ord) == 1, (ord <- as.integer(ord)) >= 0L, ord < \n    101L)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"argument is of length zero"}