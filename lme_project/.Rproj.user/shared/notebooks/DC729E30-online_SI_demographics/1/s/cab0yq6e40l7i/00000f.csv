"0","# Z-score"
"0","normalize = function(x) {"
"0","  return ((x - mean(x, na.rm = TRUE)) / sd(x, na.rm = TRUE))"
"0","}"
"0",""
"0","# Function to recode variables"
"0","var_recode = function(data){"
"0","  data$age_z <- normalize(data$age)"
"0","  data$edu_z <- normalize(data$edu_level)"
"0","  data$income_z <- normalize(data$income_order)"
"0","  data$ses <- data$edu_z + data$income_z"
"0","  data$poc <- ifelse(data$race == ""White"", 0, 1) # POC coded as 1"
"0","  data$poc <- factor(data$poc)"
"0","  data$female <- ifelse(data$sex == 2, 1, 0)  # Female=1, Male+Other=0"
"0","  #data$female <- ifelse(data$sex == 2, 1, "
"0","                      #ifelse(data$sex == 3, NA, 0)) # Female coded as 1, Other as NA, Male as 0, row 150"
"0","  data$female = factor(data$female)"
"0","  data$group = factor(data$group, levels = c(""Healthy"", ""Depression"", ""Anhedonia"", ""Both""))"
"0","  "
"0","  # mean centering for main effect"
"0","  data$depression_mc = data$depression - mean(data$depression)"
"0","  data$anhedonia_mc = data$anhedonia - mean(data$anhedonia)"
"0","  "
"0","  # raw score"
"0","  data$pvss_reversed <- -data$pvss_total"
"0","  data$bdi_total_z <- scale(data$bdi_total)"
"0","  data$pvss_total_z <- scale(data$pvss_reversed) "
"0","  "
"0","  return(data)"
"0","}"
"0",""
"0","# Function to extract coefficients from a model"
"0","extract_coefs <- function(model, model_name) {"
"0","  coefs <- summary(model)$coefficients"
"0","  as.data.frame(coefs) %>%"
"0","    rownames_to_column(""term"") %>%"
"0","    filter(term %in% c(""depression_mc"", ""anhedonia_mc"", ""depression_mc:anhedonia_mc"")) %>%"
"0","    mutate("
"0","      conf.low = Estimate - `Std. Error`,"
"0","      conf.high = Estimate + `Std. Error`,"
"0","      term_clean = case_when("
"0","        term == ""depression_mc"" ~ ""depression"","
"0","        term == ""anhedonia_mc"" ~ ""anhedonia"","
"0","        term == ""depression_mc:anhedonia_mc"" ~ ""interaction"""
"0","      ),"
"0","      model = model_name,"
"0","      sig_label = case_when("
"0","        `Pr(>|t|)` < 0.001 ~ ""***"","
"0","        `Pr(>|t|)` < 0.01  ~ ""**"","
"0","        `Pr(>|t|)` < 0.05  ~ ""*"","
"0","        TRUE ~ """""
"0","      )"
"0","    ) %>%"
"0","    select(model, term_clean, Estimate, `Std. Error`, conf.low, conf.high, sig_label)"
"0","}"
"0",""
"0","# save stats results "
"0","save_model_to_excel <- function(model, filename, include_random = TRUE) {"
"0","  library(openxlsx)"
"0","  "
"0","  # Extract fixed effects"
"0","  summary_df <- data.frame("
"0","    Variable = rownames(summary(model)$coefficients),"
"0","    summary(model)$coefficients,"
"0","    row.names = NULL"
"0","  )"
"0","  "
"0","  # Start with list containing fixed effects"
"0","  output_list <- list(Fixed = summary_df)"
"0","  "
"0","  # Optionally add random effects"
"0","  if (include_random) {"
"0","    random_df <- as.data.frame(VarCorr(model))"
"0","    output_list$Random <- random_df"
"0","  }"
"0","  "
"0","  # Save to Excel"
"0","  write.xlsx(output_list, file = filename, rowNames = FALSE)"
"0","}"
"0",""
